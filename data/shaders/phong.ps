varying vec3 v_position;
varying vec3 v_world_position;
varying vec3 v_normal;
varying vec2 v_uv;

uniform vec4 u_color;
uniform vec3 light_pos;
uniform vec3 camera_pos;
uniform sampler2D u_texture;

uniform bool double_light;
uniform vec3 second_light_pos;

void main()
{
	vec3 fog_color = vec3(0.07, 0.07, 0.07);
	vec3 dir = normalize(camera_pos - v_position);
	vec3 reflect_dir = reflect(-light_pos, v_normal);
	vec3 light_dir = normalize(light_pos - v_position);

	vec3 second_light_reflect_dir = reflect(-camera_pos, v_normal);
	vec3 second_light_dir = normalize(camera_pos - v_position);

	// White light
	vec3 diffuse = vec3(0.5,0.5,0.5) * max(dot(v_normal, light_dir), 0.0);
	vec3 second_light_diffuse = vec3(0.5,0.5,0.5) * max(dot(v_normal, second_light_dir), 0.0);
	vec3 ambient = vec3(0.3, 0.3, 0.3);

	// Add fog
	float cam_pix_dist = length(v_world_position - camera_pos);

	vec3 result;
	if (double_light) {
		result = ( (second_light_diffuse * 5.0) + ambient) * texture2D( u_texture, v_uv ).xyz;
		cam_pix_dist = clamp(cam_pix_dist / 150.0, 0.0, 1.0);
	} else {
		result = (diffuse + ambient) * texture2D( u_texture, v_uv ).xyz;
		cam_pix_dist = clamp(cam_pix_dist / 40.0, 0.0, 1.0);
	}

	//cam_pix_dist = clamp(cam_pix_dist / 220.0, 0.0, 1.0);

	result = mix(fog_color, result, 1.0 - cam_pix_dist);
	gl_FragColor = vec4( result, 1.0 ) ;
}